/*
 * This file was generated by dbusidl2cpp version 0.4
 * when processing input file org.kde.ksnapshot.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#include "ksnapshotadaptor.h"
/*
 * Implementation of adaptor class KsnapshotAdaptor
 */

KsnapshotAdaptor::KsnapshotAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KsnapshotAdaptor::~KsnapshotAdaptor()
{
    // destructor
}

void KsnapshotAdaptor::exit()
{
    // handle method call org.kde.ksnapshot.exit
    QMetaObject::invokeMethod(parent(), "exit");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->exit();
}

int KsnapshotAdaptor::grabMode()
{
    // handle method call org.kde.ksnapshot.grabMode
    int out0;
    QMetaObject::invokeMethod(parent(), "grabMode", Q_RETURN_ARG(int, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->grabMode();
    return out0;
}

bool KsnapshotAdaptor::save(bool filename)
{
    // handle method call org.kde.ksnapshot.save
    bool out0;
    QMetaObject::invokeMethod(parent(), "save", Q_RETURN_ARG(bool, out0), Q_ARG(bool, filename));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->save(filename);
    return out0;
}

void KsnapshotAdaptor::setGrabMode(int grab)
{
    // handle method call org.kde.ksnapshot.setGrabMode
    QMetaObject::invokeMethod(parent(), "setGrabMode", Q_ARG(int, grab));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->setGrabMode(grab);
}

void KsnapshotAdaptor::setTime(int newTime)
{
    // handle method call org.kde.ksnapshot.setTime
    QMetaObject::invokeMethod(parent(), "setTime", Q_ARG(int, newTime));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->setTime(newTime);
}

void KsnapshotAdaptor::setURL(const QString &newURL)
{
    // handle method call org.kde.ksnapshot.setURL
    QMetaObject::invokeMethod(parent(), "setURL", Q_ARG(QString, newURL));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->setURL(newURL);
}

void KsnapshotAdaptor::slotCopy()
{
    // handle method call org.kde.ksnapshot.slotCopy
    QMetaObject::invokeMethod(parent(), "slotCopy");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotCopy();
}

void KsnapshotAdaptor::slotGrab()
{
    // handle method call org.kde.ksnapshot.slotGrab
    QMetaObject::invokeMethod(parent(), "slotGrab");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotGrab();
}

void KsnapshotAdaptor::slotMovePointer(int x, int y)
{
    // handle method call org.kde.ksnapshot.slotMovePointer
    QMetaObject::invokeMethod(parent(), "slotMovePointer", Q_ARG(int, x), Q_ARG(int, y));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotMovePointer(x, y);
}

void KsnapshotAdaptor::slotPrint()
{
    // handle method call org.kde.ksnapshot.slotPrint
    QMetaObject::invokeMethod(parent(), "slotPrint");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotPrint();
}

void KsnapshotAdaptor::slotSave()
{
    // handle method call org.kde.ksnapshot.slotSave
    QMetaObject::invokeMethod(parent(), "slotSave");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotSave();
}

void KsnapshotAdaptor::slotSaveAs()
{
    // handle method call org.kde.ksnapshot.slotSaveAs
    QMetaObject::invokeMethod(parent(), "slotSaveAs");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotSaveAs();
}

int KsnapshotAdaptor::timeout()
{
    // handle method call org.kde.ksnapshot.timeout
    int out0;
    QMetaObject::invokeMethod(parent(), "timeout", Q_RETURN_ARG(int, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->timeout();
    return out0;
}

QString KsnapshotAdaptor::url()
{
    // handle method call org.kde.ksnapshot.url
    QString out0;
    QMetaObject::invokeMethod(parent(), "url", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->url();
    return out0;
}
#include "ksnapshotadaptor.moc"
